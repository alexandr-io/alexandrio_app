name: Flutter Build

on:
  push:
  pull_request:
  release:
    types: [published]

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: ["apk", "ios", "windows", "linux", "macos"]
        include:
          - target: apk
            os: ubuntu-20.04
            OS_NAME: linux
            ACTION_NAME: "Android"
            ENABLE: "--enable-android"
            ARGS: "--target-platform android-arm,android-arm64,android-x64 --split-per-abi"

          - target: ios
            os: macos-11.0
            OS_NAME: macos
            ACTION_NAME: "iOS"
            ENABLE: "--enable-ios"
            ARGS: "--no-codesign"

          - target: windows
            os: windows-2019
            OS_NAME: windows
            ACTION_NAME: "Desktop Windows"
            ENABLE: "--enable-windows-desktop"
            ARGS: ""

          - target: linux
            os: ubuntu-20.04
            OS_NAME: linux
            ACTION_NAME: "Desktop Linux"
            ENABLE: "--enable-linux-desktop"
            ARGS: ""

          - target: macos
            os: macos-11.0
            OS_NAME: macos
            ACTION_NAME: "Desktop MacOS"
            ENABLE: "--enable-macos-desktop"
            ARGS: ""

    runs-on: ${{matrix.os}}
    name: ${{matrix.ACTION_NAME}}

    steps:
    - run: sudo apt install -y ninja-build
      if: matrix.target == 'linux'
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1  # https://github.com/marketplace/actions/flutter-action
      with:
        channel: 'dev'  # 'master' doesn't work somehow, gotta do it manually...
    - run: flutter channel master && flutter upgrade
    - run: flutter clean
    - run: flutter config ${{matrix.ENABLE}}
    - run: flutter create .
    - run: flutter pub get
    - run: flutter test
    - run: flutter build ${{matrix.target}} ${{matrix.ARGS}}
  
    # tmp
    - run: tree build
      if: matrix.OS_NAME != 'windows'
    - run: tree build
      shell: cmd
      if: matrix.OS_NAME == 'windows'

    # TODO: Upload bins and publish in releases
